/******************************************************************************
 * for of loop
 *     - 迭代可迭代对象
 *     - 可迭代对象是:
 *         - array
 *         - string
 *         - map
 *         - set
 *         - arguments
 *         - nodeList
 *      -
 *          内置 数组、字符串、Map、Set 等
 *          类似数组的对象，例如 arguments 或 NodeList
 *          实现 迭代器协议 的用户定义对象
 *  for in 循环 和 for of 循环的区别
 *      - for...in 迭代对象的 所有可枚举属性。它不会迭代 Array、Map 或 Set 等集合。
 *          与 for...in 循环不同，for...of 迭代的是集合，而不是对象。
 *      - for...of 迭代具有 [Symbol.iterator] 属性的任何集合的元素
 *****************************************************************************/


// ----------------------------------------------------------------------------
// 迭代数组
// ----------------------------------------------------------------------------
let nums = [1, 2, 3];
for (const num of nums) {
    console.log(num);
}

// 改变元素的情况 申明用 let
for (let num of nums) {
    num += 10;
    console.log(num);
}

// 访问数组索引
for (const [index, num] of nums.entries()) {
    console.log(`${index} = ${num}`);
}


// ----------------------------------------------------------------------------
// 迭代对象，就地对象解构
// ----------------------------------------------------------------------------
const users = [
    {
        name: 'Tom',
        age: 18
    },
    {
        name: 'Jerry',
        age: 20
    }
];

for (const { name, age } of users) {
    console.log(`${name} is ${age} years old`);
}

for (const { name} of users) {
    console.log(`${name}`);
}

// ----------------------------------------------------------------------------
// 迭代字符串
// ----------------------------------------------------------------------------
for (const str of 'hello') {
    console.log(str);
}


// ----------------------------------------------------------------------------
// 迭代Map
// ----------------------------------------------------------------------------
const map = new Map();
map.set('name', 'Tom');
map.set('age', 18);
map.set('gender', 'male');

for (const [key, value] of map) {
    console.log(`${key} = ${value}`);
}

for (const item of map) {
    console.log(item);
}


// ----------------------------------------------------------------------------
// 迭代Set
// ----------------------------------------------------------------------------
const set = new Set([1, 2, 3]);
for (const item of set) {
    console.log(item);
}